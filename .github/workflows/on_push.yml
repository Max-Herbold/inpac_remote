name: InPAC_Remote
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "**"

jobs:
  Test:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    env:
      DB_DATABASE: ${{ vars.DB_DATABASE }}
      DB_USER: ${{ vars.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ vars.DB_HOST }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Execute db.sql
        run: |
          sudo service mysql start
          mysql -u root -p${{ secrets.DB_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS ${{vars.DB_DATABASE}};"
          mysql -u root -p${{ secrets.DB_PASSWORD }} ${{vars.DB_DATABASE}} < db.sql

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -r requirements-test.txt

      - name: Run tests
        run: |
          pytest
  Deploy:
    needs: Test
    timeout-minutes: 1
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Request remote pull
        # send a get request https://inpac.pythonanywhere.com/api/update/update
        run: |
          PULL_STATUS=$(curl -s -o /dev/null -w %{http_code} -X GET -H Update-Token:${{secrets.UPDATE_TOKEN}} https://inpac.pythonanywhere.com/api/update/update)
          echo "PULL_STATUS=$PULL_STATUS" >> $GITHUB_ENV
          echo status: $PULL_STATUS
          if [ $PULL_STATUS -ne 200 ]; then
            echo "Pull failed"
            exit 1
          fi
      - name: Reload remote
        # dont run this step if the previous step failed
        if: env.PULL_STATUS == 200
        run: |
          RELOAD_STATUS=$(curl -s -o /dev/null -w %{http_code} -X POST -H Authorization:"Token ${{secrets.PA_API_TOKEN}}" https://www.pythonanywhere.com/api/v0/user/inpac/webapps/inpac.pythonanywhere.com/reload/)
          echo status: $RELOAD_STATUS
          if [ $RELOAD_STATUS -ne 200 ]; then
            echo "Reload failed"
            exit 1
          fi
